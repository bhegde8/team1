# This is a basic workflow to help you get started with Actions

name: CI
    
# Controls when the action will run. 
on: 
  # Triggers the workflow on push or pull request events but only for the main branch 
  push:
    branches: [ main ]
  pull_request:
    branches: [ main , FTR-actions]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  compile:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: openjdk

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: Compile the Code
        working-directory: ./Projects/P1
        run: |
          javac -cp "src/" src/*.java
          javac -cp "tests/junit-4.10.jar:src/:tests/" src/*.java tests/*.java
          
          
  # *** Xavier's Tests ***
  #TestGhostMove
  TestGhostMove:
    runs-on: ubuntu-latest
    container: openjdk
    steps:
      - uses: actions/checkout@v2
      - name: TestGhostMove
        working-directory: ./Projects/P1
        run: |
          javac -cp "tests/junit-4.10.jar:src/:tests/" src/*.java tests/*.java
          java -cp "tests/junit-4.10.jar:src/:tests/" org.junit.runner.JUnitCore TestGhostMove
 
  # TestPacManMove
  TestPacManMove:
    runs-on: ubuntu-latest
    container: openjdk
    steps:
      - uses: actions/checkout@v2
      - name: TestPacManMove
        working-directory: ./Projects/P1
        run: |
          javac -cp "tests/junit-4.10.jar:src/:tests/" src/*.java tests/*.java
          java -cp "tests/junit-4.10.jar:src/:tests/" org.junit.runner.JUnitCore TestPacManMove     

  # TestGhostValidMoves
  TestGhostValidMoves:
    runs-on: ubuntu-latest
    container: openjdk
    steps:
      - uses: actions/checkout@v2
      - name: TestGhostValidMoves
        working-directory: ./Projects/P1
        run: |
          javac -cp "tests/junit-4.10.jar:src/:tests/" src/*.java tests/*.java
          java -cp "tests/junit-4.10.jar:src/:tests/" org.junit.runner.JUnitCore TestGhostValidMoves

  # *** Haley Greenspan's Tests ***
  # TestPacManValidMoves        
  TestPacManValidMoves:
    runs-on: ubuntu-latest
    container: openjdk
    steps:
      - uses: actions/checkout@v2
      - name:  TestPacManValidMoves
        working-directory: ./Projects/P1
        run: |
          javac -cp "tests/junit-4.10.jar:src/:tests/" src/*.java tests/*.java
          java -cp "tests/junit-4.10.jar:src/:tests/" org.junit.runner.JUnitCore TestPacManValidMoves
  
  # TestGhostInRange
  TestGhostInRange:
    runs-on: ubuntu-latest
    container: openjdk
    steps:
      - uses: actions/checkout@v2
      - name: TestGhostInRange
        working-directory: ./Projects/P1
        run: |
          javac -cp "tests/junit-4.10.jar:src/:tests/" src/*.java tests/*.java
          java -cp "tests/junit-4.10.jar:src/:tests/" org.junit.runner.JUnitCore TestGhostInRange
  
  # TestPacManInRange
  TestPacManInRange:
    runs-on: ubuntu-latest
    container: openjdk
    steps:
      - uses: actions/checkout@v2
      - name: TestPacManInRange
        working-directory: ./Projects/P1
        run: |
          javac -cp "tests/junit-4.10.jar:src/:tests/" src/*.java tests/*.java
          java -cp "tests/junit-4.10.jar:src/:tests/" org.junit.runner.JUnitCore TestPacManInRange

# *** Vi Nguyen's Test ***
# TestMapMove 
  TestMapMove:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: openjdk
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: TestMapMove
        working-directory: ./Projects/P1
        run: |
          javac -cp "tests/junit-4.10.jar:src/:tests/" src/*.java tests/*.java
          java -cp "tests/junit-4.10.jar:src/:tests/" org.junit.runner.JUnitCore TestMapMove
          

# TestMapGetLoc 
  TestMapGetLoc:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: openjdk
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: TestMapGetLoc
        working-directory: ./Projects/P1
        run: |
          javac -cp "tests/junit-4.10.jar:src/:tests/" src/*.java tests/*.java
          java -cp "tests/junit-4.10.jar:src/:tests/" org.junit.runner.JUnitCore TestMapGetLoc   
          
# TestMapAttack 
  TestMapAttack:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: openjdk
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: TestMapAttack
        working-directory: ./Projects/P1
        run: |
          javac -cp "tests/junit-4.10.jar:src/:tests/" src/*.java tests/*.java
          java -cp "tests/junit-4.10.jar:src/:tests/" org.junit.runner.JUnitCore TestMapAttack

 ## Alex Wallish tests ##
  TestGhostAttack:
    runs-on: ubuntu-latest
    container: openjdk
    steps:
      - uses: actions/checkout@v2
      - name:  TestGhostAttack
        working-directory: ./Projects/P1
        run: |
          javac -cp "tests/junit-4.10.jar:src/:tests/" src/*.java tests/*.java
          java -cp "tests/junit-4.10.jar:src/:tests/" org.junit.runner.JUnitCore TestAttack
  TestPacManConsume:
    runs-on: ubuntu-latest
    container: openjdk
    steps:
      - uses: actions/checkout@v2
      - name: TestPacManConsume
        working-directory: ./Projects/P1
        run: |
          javac -cp "tests/junit-4.10.jar:src/:tests/" src/*.java tests/*.java
          java -cp "tests/junit-4.10.jar:src/:tests/" org.junit.runner.JUnitCore TestConsume
  TestMapEatCookie:
    runs-on: ubuntu-latest
    container: openjdk
    steps:
      - uses: actions/checkout@v2
      - name: TestMapEatCookie
        working-directory: ./Projects/P1
        run: |
          javac -cp "tests/junit-4.10.jar:src/:tests/" src/*.java tests/*.java
          java -cp "tests/junit-4.10.jar:src/:tests/" org.junit.runner.JUnitCore TestMapEatCookie

